openapi: 3.0.3
info:
  title: Eternal AI API
  description: Eternal AI API description
  version: v1
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas: {}
paths:
  /sign-up:
    post:
      tags:
        - auth
      description: Sign up
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
                  examples:
                    - user@example.com
                password:
                  type: string
                  minLength: 8
                  maxLength: 32
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d!@#$%^&*()-_=+\\|{}\[\];:,.<>\/?`~]+$
                  examples:
                    - password123
              required:
                - email
                - password
        required: true
      responses:
        "201":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                    format: email
                    examples:
                      - user@example.com
                required:
                  - id
                  - email
        "409":
          description: |-
            Available messages:

            • USER_WITH_SUCH_LOGIN_ALREADY_EXISTS
          content:
            application/json:
              schema:
                type: object
                description: |-
                  Available messages:

                  • USER_WITH_SUCH_LOGIN_ALREADY_EXISTS
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
                required:
                  - message
                  - success
  /sign-in:
    post:
      tags:
        - auth
      description: Sign in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
                  examples:
                    - user@example.com
                password:
                  type: string
                  minLength: 8
                  maxLength: 32
                  pattern: ^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d!@#$%^&*()-_=+\\|{}\[\];:,.<>\/?`~]+$
                  examples:
                    - password123
              required:
                - email
                - password
        required: true
      responses:
        "200":
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
        "400":
          description: |-
            Available messages:

            • BAD_REQUEST

            • PASSWORD_IS_INCORRECT
          content:
            application/json:
              schema:
                type: object
                description: |-
                  Available messages:

                  • BAD_REQUEST

                  • PASSWORD_IS_INCORRECT
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
                required:
                  - message
                  - success
        "404":
          description: |-
            Available messages:

            • USER_NOT_FOUND
          content:
            application/json:
              schema:
                type: object
                description: |-
                  Available messages:

                  • USER_NOT_FOUND
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
                required:
                  - message
                  - success
servers:
  - url: http://localhost:3000
tags:
  - name: auth
